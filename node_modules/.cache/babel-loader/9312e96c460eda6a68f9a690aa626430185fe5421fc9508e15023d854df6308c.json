{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"; // Import Firestore\n\nexport default {\n  data() {\n    return {\n      userData: null,\n      appLoading: false,\n      allUsers: [],\n      // Initialize array to store all users for admin\n      userType: localStorage.getItem('userType')\n    };\n  },\n  mounted() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        if (this.userType === 'user') {\n          this.fetchUserProfile(user);\n        } else if (this.userType === 'admin') {\n          this.fetchAllUsers();\n        }\n      } else {\n        this.userData = null;\n        this.allUsers = [];\n      }\n    });\n  },\n  methods: {\n    fetchUserProfile(user) {\n      this.appLoading = true;\n      const db = firebase.firestore();\n      const userProfileRef = db.collection(\"users\").doc(user.uid);\n      userProfileRef.get().then(doc => {\n        if (doc.exists) {\n          this.userData = doc.data();\n          this.appLoading = false;\n        } else {\n          console.error(\"User profile document not found\");\n        }\n      }).catch(error => {\n        console.error(\"Error fetching user profile:\", error);\n      });\n    },\n    fetchAllUsers() {\n      this.appLoading = true;\n      const db = firebase.firestore();\n      db.collection(\"users\").get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          this.allUsers.push(doc.data());\n          this.appLoading = false;\n        });\n      }).catch(error => {\n        console.error(\"Error fetching all users:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["firebase","data","userData","appLoading","allUsers","userType","localStorage","getItem","mounted","auth","onAuthStateChanged","user","fetchUserProfile","fetchAllUsers","methods","db","firestore","userProfileRef","collection","doc","uid","get","then","exists","console","error","catch","querySnapshot","forEach","push"],"sources":["src/components/profile/MyProfile.vue"],"sourcesContent":["<template>\n  <div>\n\n    <vue-element-loading\n      :active=\"appLoading\"\n      :is-full-screen=\"true\"\n      background-color=\"#FFFFFF\"\n      color=\"#192841\"\n      spinner=\"line-scale\"\n    />\n    <v-layout v-if=\"userType === 'user'\" wrap justify-center py-5 >\n      <v-flex xs10 pt-3 v-if=\"userData\"> \n        <v-card>\n          <v-card-title>\n            <v-icon color=\"#192841\">mdi-account</v-icon>\n            <span style=\"font-size: 25px; font-weight: bolder\">MY PROFILE</span>\n          </v-card-title>\n          <v-card-text>\n            <span style=\"font-size: 18px\">Email: {{ userData.email }}</span>\n            <br />\n            <br />\n            <span style=\"font-size: 18px\">Phone Number: {{ userData.phoneNumber }}</span>\n            <!-- Add more profile fields as needed -->\n          </v-card-text>\n        </v-card>\n      </v-flex>\n    </v-layout>\n    <v-layout v-else justify-center wrap>\n      <v-flex xs10 pt-3>\n        <span style=\"font-size: 25px; font-weight: bolder\">USERS ({{ allUsers.length }})</span>\n\n      </v-flex>\n      <v-flex xs10 pt-3 pb-3  v-for=\"(user, index) in allUsers\" :key=\"index\"> \n        <v-card  >\n          <v-card-title>\n            <v-icon color=\"#192841\">mdi-account</v-icon>\n            <span style=\"font-size: 18px; font-weight: bolder\">USER </span>\n          </v-card-title>\n          <v-card-text>\n            <span style=\"font-size: 18px\">Email: {{ user.email }}</span>\n            <br />\n            <br />\n            <span style=\"font-size: 18px\">Phone Number: {{ user.phoneNumber }}</span>\n            <!-- Add more user profile fields as needed -->\n          </v-card-text>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"; // Import Firestore\n\nexport default {\n  data() {\n    return {\n      userData: null,\n      appLoading: false,\n\n      allUsers: [], // Initialize array to store all users for admin\n      userType: localStorage.getItem('userType'),\n    };\n  },\n  mounted() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        if (this.userType === 'user') {\n          this.fetchUserProfile(user);\n        } else if (this.userType === 'admin') {\n          this.fetchAllUsers();\n        }\n      } else {\n        this.userData = null;\n        this.allUsers = [];\n      }\n    });\n  },\n  methods: {\n    fetchUserProfile(user) {\n      this.appLoading = true;\n\n      const db = firebase.firestore();\n      const userProfileRef = db.collection(\"users\").doc(user.uid);\n      userProfileRef.get().then((doc) => {\n        if (doc.exists) {\n          this.userData = doc.data();\n      this.appLoading = false;\n\n        } else {\n          console.error(\"User profile document not found\");\n        }\n      }).catch((error) => {\n        console.error(\"Error fetching user profile:\", error);\n      });\n    },\n    fetchAllUsers() {\n      this.appLoading = true;\n\n      const db = firebase.firestore();\n      db.collection(\"users\").get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          this.allUsers.push(doc.data());\n      this.appLoading = false;\n\n        });\n      }).catch((error) => {\n        console.error(\"Error fetching all users:\", error);\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add your component-specific styles here */\n</style>\n"],"mappings":";AAoDA,OAAAA,QAAA;AACA;AACA;;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,UAAA;MAEAC,QAAA;MAAA;MACAC,QAAA,EAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,QAAA;IACAR,QAAA,CAAAS,IAAA,GAAAC,kBAAA,CAAAC,IAAA;MACA,IAAAA,IAAA;QACA,SAAAN,QAAA;UACA,KAAAO,gBAAA,CAAAD,IAAA;QACA,gBAAAN,QAAA;UACA,KAAAQ,aAAA;QACA;MACA;QACA,KAAAX,QAAA;QACA,KAAAE,QAAA;MACA;IACA;EACA;EACAU,OAAA;IACAF,iBAAAD,IAAA;MACA,KAAAR,UAAA;MAEA,MAAAY,EAAA,GAAAf,QAAA,CAAAgB,SAAA;MACA,MAAAC,cAAA,GAAAF,EAAA,CAAAG,UAAA,UAAAC,GAAA,CAAAR,IAAA,CAAAS,GAAA;MACAH,cAAA,CAAAI,GAAA,GAAAC,IAAA,CAAAH,GAAA;QACA,IAAAA,GAAA,CAAAI,MAAA;UACA,KAAArB,QAAA,GAAAiB,GAAA,CAAAlB,IAAA;UACA,KAAAE,UAAA;QAEA;UACAqB,OAAA,CAAAC,KAAA;QACA;MACA,GAAAC,KAAA,CAAAD,KAAA;QACAD,OAAA,CAAAC,KAAA,iCAAAA,KAAA;MACA;IACA;IACAZ,cAAA;MACA,KAAAV,UAAA;MAEA,MAAAY,EAAA,GAAAf,QAAA,CAAAgB,SAAA;MACAD,EAAA,CAAAG,UAAA,UAAAG,GAAA,GAAAC,IAAA,CAAAK,aAAA;QACAA,aAAA,CAAAC,OAAA,CAAAT,GAAA;UACA,KAAAf,QAAA,CAAAyB,IAAA,CAAAV,GAAA,CAAAlB,IAAA;UACA,KAAAE,UAAA;QAEA;MACA,GAAAuB,KAAA,CAAAD,KAAA;QACAD,OAAA,CAAAC,KAAA,8BAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}