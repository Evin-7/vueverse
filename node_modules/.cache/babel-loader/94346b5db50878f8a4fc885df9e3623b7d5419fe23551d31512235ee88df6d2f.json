{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { Cropper } from \"vue-advanced-cropper\";\nimport \"vue-advanced-cropper/dist/style.css\";\nexport default {\n  props: [\"singleImage\", \"pageId\", \"height\", \"width\", \"heading\", \"componentType\"],\n  components: {\n    Cropper\n  },\n  data() {\n    return {\n      image: null,\n      resultImage: null,\n      imageArray: [],\n      showSnackBar: false,\n      msg: null,\n      timeout: 5000,\n      isCropper: false,\n      photos: []\n    };\n  },\n  methods: {\n    cropImage() {\n      var imageData = this.dataURLtoFile(this.$refs.cropper.getResult().canvas.toDataURL(\"image/jpeg\", 0.8), \"myimage.jpg\");\n      console.log(\"imageData\", imageData);\n      this.resultImage = URL.createObjectURL(imageData);\n      console.log(\"componentType==\", this.componentType);\n      this.isCropper = false;\n      this.$emit(\"stepper\", {\n        type: this.componentType,\n        selectedFiles: imageData\n      });\n    },\n    dataURLtoFile(dataurl, filename) {\n      var arr = dataurl.split(\",\"),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new File([u8arr], filename, {\n        type: mime\n      });\n    },\n    browseImage(event) {\n      var img;\n      img = new Image();\n      img.src = window.URL.createObjectURL(event.target.files[0]);\n      var ty = event.target.files[0];\n      if (ty.size > 3145728) {\n        this.msg = \"File size Should be less than 3MB\";\n        this.showSnackBar = true;\n        return;\n      } else {\n        img.onload = () => {\n          this.isCropper = true;\n          this.image = URL.createObjectURL(event.target.files[0]);\n        };\n      }\n    }\n  }\n};","map":{"version":3,"names":["Cropper","props","components","data","image","resultImage","imageArray","showSnackBar","msg","timeout","isCropper","photos","methods","cropImage","imageData","dataURLtoFile","$refs","cropper","getResult","canvas","toDataURL","console","log","URL","createObjectURL","componentType","$emit","type","selectedFiles","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","browseImage","event","img","Image","src","window","target","files","ty","size","onload"],"sources":["public/singleImage.vue"],"sourcesContent":["<template>\n  <div>\n    <v-snackbar v-model=\"showSnackBar\" color=\"#68D389\" right :timeout=\"timeout\">\n      <v-layout wrap justify-center>\n        <v-flex text-left class=\"align-self-center\">\n          <span style=\"color: #ffffff\">\n            {{ msg }}\n          </span>\n        </v-flex>\n        <v-flex text-right>\n          <v-btn small :ripple=\"false\" text @click=\"showSnackBar = false\">\n            <v-icon style=\"color: #ffffff\">mdi-close</v-icon>\n          </v-btn>\n        </v-flex>\n      </v-layout>\n    </v-snackbar>\n    <v-layout wrap>\n      <v-flex xs12 align-self-center>\n        <v-card\n          tile\n          elevation=\"0\"\n          color=\"#ED7243\"\n          class=\"mr-4\"\n          height=\"80px\"\n          width=\"90px\"\n          @click=\"$refs.files.click()\"\n        >\n          <v-layout wrap fill-height v-if=\"!singleImage && !resultImage\">\n            <v-flex xs12 align-self-center text-center>\n              <v-icon color=\"white\">mdi-plus-circle-outline</v-icon>\n            </v-flex>\n          </v-layout>\n          <v-img\n            v-if=\"singleImage && !resultImage\"\n            :src=\"mediaURLnewx + singleImage\"\n            height=\"80px\"\n            width=\"90px\"\n          ></v-img>\n          <v-img v-else :src=\"resultImage\" height=\"80px\" width=\"90px\"> </v-img>\n          <v-dialog\n            v-model=\"isCropper\"\n            persistent\n            :width=\"\n              $vuetify.breakpoint.name == 'xs' ||\n              $vuetify.breakpoint.name == 'sm'\n                ? '100vw'\n                : $vuetify.breakpoint.name == 'md'\n                ? '80vw'\n                : $vuetify.breakpoint.name == 'lg'\n                ? '30vw'\n                : '10vw'\n            \"\n          >\n            <v-card class=\"pb-3\">\n              <v-card-title class=\"LexendRegular\">\n                <v-layout wrap>\n                  <v-flex md12>\n                    <span style=\"font-family: LexendRegular;\"> Crop Image</span>\n                  </v-flex>\n                  <v-flex text-right>\n                    <v-btn\n                      small\n                      :ripple=\"false\"\n                      text\n                      @click=\"isCropper = false\"\n                    >\n                      <v-icon style=\"color: red\">mdi-close</v-icon>\n                    </v-btn>\n                  </v-flex>\n                </v-layout>\n              </v-card-title>\n              <Cropper\n                ref=\"cropper\"\n                :stencil-props=\"{\n                  aspectRatio: width / height,\n                }\"\n                class=\"example-cropper\"\n                :src=\"image\"\n              />\n              <v-card-actions>\n                <v-layout wrap justify-start justify-sm-center pt-3>\n                  <v-flex xs4 sm3 md3>\n                    <v-btn\n                      small\n                      :ripple=\"false\"\n                      color=\"#68D389\"\n                      class=\"py-2 px-2 px-sm-5\"\n                      @click=\"cropImage\"\n                    >\n                      <span style=\"color: #ffffff; font-family: LexendRegular\"\n                        >Crop</span\n                      ></v-btn\n                    >\n                  </v-flex>\n                  <v-flex xs8 md3 xs3>\n                    <v-btn\n                      small\n                      :ripple=\"false\"\n                      color=\"#68D389\"\n                      class=\"py-2 px-3\"\n                      @click=\"$refs.files.click()\"\n                    >\n                      <span style=\"color: #ffffff; font-family: LexendRegular\"\n                        >Change Image</span\n                      ></v-btn\n                    >\n                  </v-flex>\n                </v-layout>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n          <!-- <v-layout wrap justify-space-between pa-4>\n            <v-flex xs12 md9 pa-1>\n              <v-img\n                v-if=\"singleImage && !resultImage\"\n                :src=\"mediaUURL + singleImage\"\n                contain\n                height=\"50px\"\n              ></v-img>\n              <v-img v-else :src=\"resultImage\" contain height=\"50px\"> </v-img>\n            </v-flex>\n            <v-flex\n              v-if=\"singleImage || resultImage\"\n              xs12\n              md3\n              align-self-center\n            >\n              <v-layout wrap justify-center>\n                <v-flex xs12 pa-2>\n                  <v-btn\n                    block\n                    depressed\n                    :ripple=\"false\"\n                    @click=\"$refs.files.click()\"\n                  >\n                    <span\n                      style=\"\n                        font-size: 12px;\n                        text-align: end;\n                        letter-spacing: 0px;\n                        color: #000000;\n                        opacity: 1;\n                      \"\n                    >\n                      UPLOAD NEW\n                    </span>\n                  </v-btn>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n          </v-layout> -->\n        </v-card>\n        <input\n          v-show=\"false\"\n          accept=\"image/*\"\n          id=\"file1\"\n          ref=\"files\"\n          type=\"file\"\n          @change=\"browseImage\"\n        />\n      </v-flex>\n    </v-layout>\n  </div>\n</template>\n  <script>\nimport { Cropper } from \"vue-advanced-cropper\";\nimport \"vue-advanced-cropper/dist/style.css\";\nexport default {\n  props: [\n    \"singleImage\",\n    \"pageId\",\n    \"height\",\n    \"width\",\n    \"heading\",\n    \"componentType\",\n  ],\n  components: {\n    Cropper,\n  },\n  data() {\n    return {\n      image: null,\n      resultImage: null,\n      imageArray: [],\n      showSnackBar: false,\n      msg: null,\n      timeout: 5000,\n      isCropper: false,\n      photos: [],\n    };\n  },\n\n  methods: {\n    cropImage() {\n      var imageData = this.dataURLtoFile(\n        this.$refs.cropper.getResult().canvas.toDataURL(\"image/jpeg\", 0.8),\n        \"myimage.jpg\"\n      );\n      console.log(\"imageData\", imageData);\n      this.resultImage = URL.createObjectURL(imageData);\n      console.log(\"componentType==\", this.componentType);\n      this.isCropper = false;\n      this.$emit(\"stepper\", {\n        type: this.componentType,\n        selectedFiles: imageData,\n      });\n    },\n    dataURLtoFile(dataurl, filename) {\n      var arr = dataurl.split(\",\"),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new File([u8arr], filename, { type: mime });\n    },\n    browseImage(event) {\n      var img;\n      img = new Image();\n      img.src = window.URL.createObjectURL(event.target.files[0]);\n      var ty = event.target.files[0];\n      if (ty.size > 3145728) {\n        this.msg = \"File size Should be less than 3MB\";\n        this.showSnackBar = true;\n        return;\n      } else {\n        img.onload = () => {\n          this.isCropper = true;\n          this.image = URL.createObjectURL(event.target.files[0]);\n        };\n      }\n    },\n  },\n};\n</script>\n                "],"mappings":";;;;;;;;;;AAqKA,SAAAA,OAAA;AACA;AACA;EACAC,KAAA,GACA,eACA,UACA,UACA,SACA,WACA,gBACA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,KAAA;MACAC,WAAA;MACAC,UAAA;MACAC,YAAA;MACAC,GAAA;MACAC,OAAA;MACAC,SAAA;MACAC,MAAA;IACA;EACA;EAEAC,OAAA;IACAC,UAAA;MACA,IAAAC,SAAA,QAAAC,aAAA,CACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,SAAA,GAAAC,MAAA,CAAAC,SAAA,qBACA,aACA;MACAC,OAAA,CAAAC,GAAA,cAAAR,SAAA;MACA,KAAAT,WAAA,GAAAkB,GAAA,CAAAC,eAAA,CAAAV,SAAA;MACAO,OAAA,CAAAC,GAAA,yBAAAG,aAAA;MACA,KAAAf,SAAA;MACA,KAAAgB,KAAA;QACAC,IAAA,OAAAF,aAAA;QACAG,aAAA,EAAAd;MACA;IACA;IACAC,cAAAc,OAAA,EAAAC,QAAA;MACA,IAAAC,GAAA,GAAAF,OAAA,CAAAG,KAAA;QACAC,IAAA,GAAAF,GAAA,IAAAG,KAAA;QACAC,IAAA,GAAAC,IAAA,CAAAL,GAAA;QACAM,CAAA,GAAAF,IAAA,CAAAG,MAAA;QACAC,KAAA,OAAAC,UAAA,CAAAH,CAAA;MACA,OAAAA,CAAA;QACAE,KAAA,CAAAF,CAAA,IAAAF,IAAA,CAAAM,UAAA,CAAAJ,CAAA;MACA;MACA,WAAAK,IAAA,EAAAH,KAAA,GAAAT,QAAA;QAAAH,IAAA,EAAAM;MAAA;IACA;IACAU,YAAAC,KAAA;MACA,IAAAC,GAAA;MACAA,GAAA,OAAAC,KAAA;MACAD,GAAA,CAAAE,GAAA,GAAAC,MAAA,CAAAzB,GAAA,CAAAC,eAAA,CAAAoB,KAAA,CAAAK,MAAA,CAAAC,KAAA;MACA,IAAAC,EAAA,GAAAP,KAAA,CAAAK,MAAA,CAAAC,KAAA;MACA,IAAAC,EAAA,CAAAC,IAAA;QACA,KAAA5C,GAAA;QACA,KAAAD,YAAA;QACA;MACA;QACAsC,GAAA,CAAAQ,MAAA;UACA,KAAA3C,SAAA;UACA,KAAAN,KAAA,GAAAmB,GAAA,CAAAC,eAAA,CAAAoB,KAAA,CAAAK,MAAA,CAAAC,KAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}