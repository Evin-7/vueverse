{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ImageComp from \"../public/s\";\nimport { VueEditor } from \"vue2-editor\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nexport default {\n  name: \"FirebaseTest\",\n  components: {\n    ImageComp,\n    VueEditor\n  },\n  data() {\n    return {\n      userType: localStorage.getItem(\"userType\"),\n      showSnackBar: false,\n      deletedialog: false,\n      content: \"\",\n      description: \"\",\n      sub: false,\n      ServerError: false,\n      deleteDialog: false,\n      timeout: 5000,\n      prev: null,\n      msg: null,\n      curid: [],\n      dialog: false,\n      editdialog: false,\n      name: \"\",\n      appLoading: false,\n      dialogDelete: false,\n      search: \"\",\n      itemname: \"\",\n      addcat: false,\n      list: [],\n      coverImageFile: null,\n      selectedFiles: [],\n      image: null,\n      role: null,\n      coverImageArray: [],\n      formDataCover: new FormData(),\n      flagg: true,\n      subname: null,\n      menu: false,\n      menu1: false,\n      deleteid: \"\",\n      menu2: false,\n      menu22: false,\n      formData2: new FormData(),\n      empList2: null,\n      toDate: null,\n      fromDate: null,\n      formData: new FormData(),\n      formData3: new FormData(),\n      empList3: null,\n      search1: null,\n      search2: null,\n      search3: null,\n      search11: null,\n      id: \"\",\n      search22: null,\n      topImage: null,\n      blogs: [],\n      searchInput: null,\n      search33: null,\n      keysearch: null,\n      ffprojectList: null,\n      addDialog: false\n    };\n  },\n  mounted() {\n    if (this.userType === \"admin\") {\n      this.getAllBlogs();\n    } else if (this.userType === \"user\") {\n      this.getBlogs();\n    }\n    // Fetch locations data when the component mounts\n  },\n  methods: {\n    getAllBlogs() {\n      console.log(\"Fetching all blogs...\");\n      this.appLoading = true;\n\n      // Get a reference to the Firestore database\n      const db = firebase.firestore();\n\n      // Fetch all blogs\n      db.collection(\"blogs\").get().then(async querySnapshot => {\n        // Iterate through the documents and fetch user data for each blog\n        const promises = querySnapshot.docs.map(async doc => {\n          const blogData = doc.data();\n          const userId = blogData.userId;\n\n          // Fetch user data for the current blog\n          const userDoc = await db.collection(\"users\").doc(userId).get();\n          const userData = userDoc.data();\n\n          // Populate the user property of the blog with user data\n          blogData.user = userData;\n          return blogData;\n        });\n\n        // Resolve all promises\n        const blogs = await Promise.all(promises);\n\n        // Update the blogs array with the fetched data\n        this.blogs = blogs;\n        this.appLoading = false;\n      }).catch(error => {\n        // Handle any errors that occur during the Firestore operation\n        console.error(\"Error fetching all blogs:\", error);\n        // Optionally, provide feedback to the user about the error\n        this.appLoading = false;\n      });\n    },\n    deleteBlog(index) {\n      // Remove the blog at the specified index from the list\n      this.list.splice(index, 1);\n\n      // Update the blogs data in Local Storage\n      localStorage.setItem(\"blogs\", JSON.stringify(this.list));\n      this.deleteDialog = false;\n      this.msg = \"Blog deleted successfully\";\n      this.showSnackBar = true;\n      this.editdialog = false;\n      this.getBlogs();\n    },\n    navigateToBlogDetails(item, useremail) {\n      const itemToSend = {\n        name: item.name,\n        description: item.description,\n        createdAt: item.createdAt,\n        content: item.content,\n        phoneNumber: item.user ? item.user.phoneNumber : null,\n        topImage: item.topImage\n      };\n      this.$router.push({\n        name: \"BlogDetails\",\n        query: {\n          item: JSON.stringify(itemToSend),\n          useremail: useremail\n        }\n      });\n    },\n    getBlogs() {\n      this.appLoading = true;\n      // Get the current user\n      const currentUser = firebase.auth().currentUser;\n      if (!currentUser) {\n        // User is not authenticated, handle this case if needed\n        console.error(\"User is not authenticated.\");\n        return;\n      }\n\n      // Get a reference to the Firestore database\n      const db = firebase.firestore();\n\n      // Query the \"blogs\" collection to fetch blogs associated with the current user\n      db.collection(\"blogs\").where(\"userId\", \"==\", currentUser.uid).get().then(querySnapshot => {\n        const storedLocations = [];\n        querySnapshot.forEach(doc => {\n          // For each document in the collection, push it to the storedLocations array\n          storedLocations.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        // Set the list data to the fetched locations\n        this.list = storedLocations;\n        this.appLoading = false;\n      }).catch(error => {\n        // Handle any errors that occur during the Firestore operation\n        console.error(\"Error fetching locations: \", error);\n        // Optionally, provide feedback to the user about the error\n      });\n    },\n    validateFields() {\n      if (!this.name) {\n        this.msg = \"Please enter Blog title\";\n        this.showSnackBar = true;\n        return;\n      } else if (!this.description) {\n        this.msg = \"Please enter Blog description\";\n        this.showSnackBar = true;\n        return;\n      } else if (!this.content) {\n        this.msg = \"Please enter Blog content\";\n        this.showSnackBar = true;\n        return;\n      } else if (!this.topImage) {\n        this.msg = \"Please enter Blog image\";\n        this.showSnackBar = true;\n        return;\n      } else {\n        this.add();\n      }\n    },\n    add() {\n      const reader = new FileReader();\n      reader.readAsDataURL(this.topImage);\n      reader.onload = () => {\n        // Get the current user\n        const currentUser = firebase.auth().currentUser;\n        if (!currentUser) {\n          // User is not authenticated, handle this case if needed\n          console.error(\"User is not authenticated.\");\n          return;\n        }\n\n        // Get the current date and time\n        const currentDate = new Date();\n        const dateTimeString = currentDate.toISOString(); // Convert to ISO string format\n\n        let newBlog = {\n          name: this.name,\n          description: this.description,\n          content: this.content,\n          topImage: reader.result,\n          userId: currentUser.uid,\n          // Store the user's UID along with the blog data\n          createdAt: dateTimeString // Store the current date and time\n        };\n\n        // Get a reference to the Firestore database\n        const db = firebase.firestore();\n\n        // Add the new blog to the \"blogs\" collection in Firestore\n        db.collection(\"blogs\").add(newBlog).then(() => {\n          this.msg = \"Blog added successfully\";\n          this.showSnackBar = true;\n          // Reset the form fields\n          this.name = \"\";\n          this.description = \"\";\n          this.content = \"\";\n          this.topImage = null;\n          this.addDialog = false;\n          this.getBlogs();\n        }).catch(error => {\n          // Handle any errors that occur during the Firestore operation\n          console.error(\"Error adding blog: \", error);\n          // Provide feedback to the user about the error\n          this.$emit(\"snackbar\", \"Error adding blog. Please try again later.\");\n        });\n      };\n    },\n    edit() {\n      // Get a reference to the Firestore database\n      const db = firebase.firestore();\n\n      // Find the document to edit based on its ID\n      db.collection(\"blogs\").doc(this.curid.id).get().then(doc => {\n        if (doc.exists) {\n          // Check if a new image has been selected\n          if (this.topImage instanceof File) {\n            // Convert the new image to Base64 format\n            const reader = new FileReader();\n            reader.readAsDataURL(this.topImage);\n            reader.onload = () => {\n              // Update the blog document in Firestore with the edited values\n              db.collection(\"blogs\").doc(this.curid.id).update({\n                name: this.curid.name,\n                description: this.curid.description,\n                content: this.curid.content,\n                topImage: reader.result // Assign the Base64 image data\n              }).then(() => {\n                // Provide feedback to the user that the blog was edited successfully\n                this.msg = \"Blog edited successfully\";\n                this.showSnackBar = true;\n                this.editdialog = false;\n                this.getBlogs();\n              }).catch(error => {\n                // Handle any errors that occur during the Firestore operation\n                console.error(\"Error editing blog:\", error);\n                // Optionally, provide feedback to the user about the error\n              });\n            };\n          } else {\n            // Update the blog document in Firestore with the edited values\n            db.collection(\"blogs\").doc(this.curid.id).update({\n              name: this.curid.name,\n              description: this.curid.description,\n              content: this.curid.content\n              // Keep the existing image if no new image is selected\n            }).then(() => {\n              // Provide feedback to the user that the blog was edited successfully\n              this.msg = \"Blog edited successfully\";\n              this.showSnackBar = true;\n              this.editdialog = false;\n              this.getBlogs();\n            }).catch(error => {\n              // Handle any errors that occur during the Firestore operation\n              console.error(\"Error editing blog:\", error);\n              // Optionally, provide feedback to the user about the error\n            });\n          }\n        } else {\n          // Blog not found, provide feedback to the user\n          this.$emit(\"snackbar\", \"Blog not found\");\n        }\n      }).catch(error => {\n        // Handle any errors that occur during the Firestore operation\n        console.error(\"Error retrieving blog for editing:\", error);\n        // Optionally, provide feedback to the user about the error\n      });\n\n      // Close the edit dialog\n      this.editdialog = false;\n    },\n    formatTime(timestamp) {\n      const date = new Date(timestamp);\n      // Format the date and time as per your requirement\n      const formattedDateTime = date.toLocaleString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\"\n      });\n      return formattedDateTime;\n    },\n    formatDate(timestamp) {\n      const date = new Date(timestamp);\n      // Format the date and time as per your requirement\n      const formattedDateTime = date.toLocaleString(\"en-US\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      });\n      return formattedDateTime;\n    },\n    handleEditClick(item) {\n      this.curid = item;\n      console.log(\"data is\", this.curid);\n      this.topImage = this.curid.topImage;\n      console.log(\"photo\", this.topImage);\n      this.editdialog = true;\n    },\n    winStepper(window_data) {\n      if (window_data.type == \"topImage\") {\n        this.topImage = window_data.selectedFiles;\n      } else if (window_data.type == \"image\") {\n        this.imageArray = window_data.imageArray;\n        this.imageFiles.push(window_data.selectedFiles);\n      } else if (window_data.type == \"imageRemoval\") {\n        var values = this.formData.getAll(\"photos\");\n        values.splice(window_data.removalItem, 1);\n        this.formData.set(\"photos\", values);\n        this.imageArray = window_data.imageArray;\n      }\n    }\n  }\n};","map":{"version":3,"names":["ImageComp","VueEditor","firebase","name","components","data","userType","localStorage","getItem","showSnackBar","deletedialog","content","description","sub","ServerError","deleteDialog","timeout","prev","msg","curid","dialog","editdialog","appLoading","dialogDelete","search","itemname","addcat","list","coverImageFile","selectedFiles","image","role","coverImageArray","formDataCover","FormData","flagg","subname","menu","menu1","deleteid","menu2","menu22","formData2","empList2","toDate","fromDate","formData","formData3","empList3","search1","search2","search3","search11","id","search22","topImage","blogs","searchInput","search33","keysearch","ffprojectList","addDialog","mounted","getAllBlogs","getBlogs","methods","console","log","db","firestore","collection","get","then","querySnapshot","promises","docs","map","doc","blogData","userId","userDoc","userData","user","Promise","all","catch","error","deleteBlog","index","splice","setItem","JSON","stringify","navigateToBlogDetails","item","useremail","itemToSend","createdAt","phoneNumber","$router","push","query","currentUser","auth","where","uid","storedLocations","forEach","validateFields","add","reader","FileReader","readAsDataURL","onload","currentDate","Date","dateTimeString","toISOString","newBlog","result","$emit","edit","exists","File","update","formatTime","timestamp","date","formattedDateTime","toLocaleString","hour","minute","formatDate","weekday","year","month","day","handleEditClick","winStepper","window_data","type","imageArray","imageFiles","values","getAll","removalItem","set"],"sources":["public/BlogsPage.vue"],"sourcesContent":["<template>\n  <div>\n    <v-snackbar v-model=\"showSnackBar\" color=\"black\">\n      <v-layout wrap justify-center>\n        <v-flex text-left class=\"align-self-center\">\n          <span style=\"color: white\">\n            {{ msg }}\n          </span>\n        </v-flex>\n        <v-flex text-right>\n          <v-btn small :ripple=\"false\" text @click=\"showSnackBar = false\">\n            <v-icon style=\"color: white\">mdi-close</v-icon>\n          </v-btn>\n        </v-flex>\n      </v-layout>\n    </v-snackbar>\n    <vue-element-loading\n      :active=\"appLoading\"\n      :is-full-screen=\"true\"\n      background-color=\"#FFFFFF\"\n      color=\"#192841\"\n      spinner=\"line-scale\"\n    />\n    <v-layout style=\"font-family: LexendRegular\" wrap pb-9>\n      <v-flex xs12>\n        <v-layout wrap pr-1 pt-7 justify-center>\n          <v-flex xs11 sm9 lg9 text-left>\n            <span style=\"font-size: 25px; font-weight: bolder\">BLOGS</span>\n          </v-flex>\n          <v-flex xs11 sm2 lg2 pb-5>\n            <v-btn\n              v-if=\"userType === 'user'\"\n              block\n              class=\"custombackground\"\n              dark\n              width=\"160px\"\n              @click=\"addDialog = true\"\n              ><span\n                style=\"\n                  font-family: LexendRegular;\n                  font-size: 15px;\n                  color: white;\n                  letter-spacing: 1px;\n                  cursor: pointer;\n                \"\n                >Add\n              </span>\n              <v-icon dark size=\"15px\"> mdi-plus </v-icon>\n            </v-btn>\n          </v-flex>\n        </v-layout>\n      </v-flex>\n      <v-flex xs12>\n        <v-layout wrap pa-4 v-if=\"list.length > 0\">\n          <v-flex\n            xs12\n            sm4\n            md4\n            lg4\n            xl3\n            pt-3\n            pa-2\n            v-for=\"(item, index) in list\"\n            :key=\"index\"\n          >\n            <v-layout wrap justify-center>\n              <v-flex xs12 lg10>\n                <v-card>\n                  <v-layout wrap justify-center pt-3>\n                    <v-flex xs11>\n                      <v-layout wrap justify-start>\n                        <v-flex xs12 v-if=\"item.topImage\">\n                          <v-layout wrap justify-center>\n                            <v-flex xs12>\n                              <v-img\n                                :src=\"item.topImage\"\n                                height=\"100%\"\n                                width=\"100%\"\n                                contain\n                              ></v-img>\n                            </v-flex>\n                          </v-layout>\n                        </v-flex>\n                        <v-flex xs12 v-else>\n                          <v-img\n                            height=\"150px\"\n                            width=\"100%\"\n                            src=\"../src/assets/Images/noimg.png\"\n                          ></v-img>\n                        </v-flex>\n                      </v-layout>\n                    </v-flex>\n                    <v-flex xs12 sm11 lg12>\n                      <v-layout wrap justify-center fill-height>\n                        <v-flex xs11 lg11 pt-3 align-self-center text-center>\n                          <strong>Blog Name:</strong>\n                          <span style=\"font-size: 14px\">\n                            {{ item.name }}\n                          </span>\n                        </v-flex>\n                        <v-flex xs11 lg11 pt-3 pb-2 align-self-center>\n                          <v-layout wrap justify-center>\n                            <v-flex xs12>\n                              <v-btn\n                                block\n                                outlined\n                                @click=\"handleEditClick(item)\"\n                                color=\"#192841\"\n                              >\n                                <span\n                                  style=\"color: black; text-transform: none\"\n                                >\n                                  Edit\n                                </span>\n                                &nbsp;\n                                <v-icon size=\"100%\" color=\"#192841\">\n                                  mdi-pencil\n                                </v-icon>\n                              </v-btn>\n                            </v-flex>\n                            <v-flex xs12 pt-3>\n                              <v-btn\n                                @click=\"\n                                  (deleteDialog = true), (deleteid = item.index)\n                                \"\n                                block\n                                outlined\n                                color=\"#192841\"\n                              >\n                                <span\n                                  style=\"color: black; text-transform: none\"\n                                >\n                                  Delete\n                                </span>\n                                &nbsp;\n                                <v-icon size=\"100%\" color=\"#192841\">\n                                  mdi-delete\n                                </v-icon>\n                              </v-btn>\n                            </v-flex>\n                          </v-layout>\n                        </v-flex>\n                      </v-layout>\n                    </v-flex>\n                  </v-layout>\n                </v-card>\n              </v-flex>\n            </v-layout>\n          </v-flex>\n        </v-layout>\n        <v-layout wrap v-else>\n          <v-flex xs12 text-center>\n            <span v-if=\"userType === 'user'\"\n              >Oops! No data found. Start by adding some blogs.</span\n            >\n          </v-flex>\n        </v-layout>\n        <v-layout wrap v-if=\"blogs.length > 0\">\n          <v-flex\n            xs12\n            sm4\n            md4\n            lg4\n            xl3\n            pa-2\n            pt-3\n            v-for=\"(item, index) in blogs\"\n            :key=\"index\"\n          >\n            <v-layout wrap justify-center>\n              <v-flex xs12 lg10>\n                <v-card>\n                  <v-layout wrap justify-center pt-3>\n                    <v-flex xs11 >\n                      <v-layout wrap justify-start>\n                        <v-flex xs12 v-if=\"item.topImage\">\n                          <v-layout wrap justify-center>\n                            <v-flex xs12>\n                              <v-img\n                                :src=\"item.topImage\"\n                                height=\"100%\"\n                                width=\"100%\"\n                                contain\n                              ></v-img>\n                            </v-flex>\n                          </v-layout>\n                        </v-flex>\n                        <v-flex xs12 v-else>\n                          <v-img\n                            height=\"150px\"\n                            width=\"100%\"\n                            src=\"../src/assets/Images/noimg.png\"\n\n                          ></v-img>\n                        </v-flex>\n                      </v-layout>\n                    </v-flex>\n                    <v-flex xs12 sm12 lg12>\n                      <v-layout wrap justify-center fill-height>\n                        <v-flex xs11 sm11 lg11 pt-3 align-self-center text-left>\n                          <strong>Blog Name:</strong>\n                          <span style=\"font-size: 14px\">\n                            {{ item.name }}\n                          </span>\n                        </v-flex>\n\n                        <v-flex xs11 lg11 pt-3 align-self-center text-left>\n                          <strong>Added by :</strong>\n                          <span\n                            v-if=\"item && item.user && item.user.email\"\n                            style=\"font-size: 14px\"\n                          >\n                            {{ item.user.email }}\n                          </span>\n                        </v-flex>\n\n                        <v-flex xs11 lg11 pt-3 align-self-center text-left>\n                          <strong>Description :</strong>\n                          <span style=\"font-size: 14px\">\n                            {{ item.description }}\n                          </span>\n                        </v-flex>\n\n                        <v-flex xs11 lg11 pt-3 align-self-center text-left>\n                          <strong>Phone number :</strong>\n                          <span\n                            v-if=\"item && item.user && item.user.phoneNumber\"\n                            style=\"font-size: 14px\"\n                          >\n                            {{ item.user.phoneNumber }}\n                          </span>\n                        </v-flex>\n\n                        <v-flex xs11 lg11 pt-3 align-self-center text-left>\n                          <strong>Time :</strong>\n                          <span v-if=\"item && item.createdAt\">\n                            {{ formatTime(item.createdAt) }}\n                          </span>\n                        </v-flex>\n\n                        <v-flex xs11 lg11 pt-3 align-self-center text-left>\n                          <strong>Date :</strong>\n                          <span v-if=\"item && item.createdAt\">\n                            {{ formatDate(item.createdAt) }}\n                          </span>\n                        </v-flex>\n\n                        <v-flex\n                          xs11\n                          pt-3\n                          pb-5\n                          @click=\"navigateToBlogDetails(item, item.user.email)\"\n                        >\n                          <v-btn block outlined color=\"#192841\">\n                            <span>VIEW</span>\n                          </v-btn>\n                        </v-flex>\n                      </v-layout>\n                    </v-flex>\n                  </v-layout>\n                </v-card>\n              </v-flex>\n            </v-layout>\n          </v-flex>\n        </v-layout>\n        <v-layout wrap v-else>\n          <v-flex xs12 text-center v-if=\"userType === 'admin'\">\n            <span>Oops! No data found.</span>\n          </v-flex>\n        </v-layout>\n      </v-flex>\n      <v-dialog v-model=\"deleteDialog\" max-width=\"400\">\n        <v-card style=\"font-family: LexendRegular\">\n          <v-card-title style=\"font-family: LexendRegular\">\n            <span> Delete Confirmation </span>\n          </v-card-title>\n          <v-card-text>\n            <span style=\"font-family: LexendRegular\">\n              Are you sure you want to delete?\n            </span>\n          </v-card-text>\n          <v-card-actions>\n            <v-layout wrap justify-center>\n              <v-flex xs3>\n                <v-btn\n                  style=\"text-transform: none; color: red\"\n                  text\n                  @click=\"deleteBlog(index)\"\n                  >Yes</v-btn\n                >\n              </v-flex>\n              <v-flex xs3>\n                <v-btn\n                  style=\"text-transform: none\"\n                  text\n                  @click=\"deleteDialog = false\"\n                  >No</v-btn\n                >\n              </v-flex>\n            </v-layout>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <v-dialog\n        :retain-focus=\"true\"\n        persistent\n        v-model=\"editdialog\"\n        max-width=\"650px\"\n      >\n        <v-card style=\"font-family: LexendRegular\">\n          <v-layout wrap justify-center>\n            <v-flex\n              ><v-layout wrap justify-center pa-3>\n                <v-flex xs12 text-right>\n                  <v-icon\n                    @click=\"editdialog = false\"\n                    color=\"red\"\n                    size=\"150%\"\n                    dark\n                  >\n                    mdi-close\n                  </v-icon>\n                </v-flex>\n                <v-flex xs10>\n                  <span\n                    style=\"\n                      color: black;\n                      font-size: 16px;\n                      font-weight: bold;\n                      font-family: LexendRegular;\n                    \"\n                    >Name</span\n                  >\n                  <v-form @submit.prevent=\"validateInput\">\n                    <v-text-field\n                      color=\"black\"\n                      outlined\n                      background-color=\"white\"\n                      dense\n                      type=\"text\"\n                      v-model=\"curid.name\"\n                      hide-details\n                    >\n                    </v-text-field>\n                  </v-form>\n                </v-flex>\n\n                <v-flex xs10 pt-4>\n                  <span style=\"color: black; font-size: 16px; font-weight: bold\"\n                    >Description</span\n                  >\n                  <v-form @submit.prevent=\"validateInput\">\n                    <v-textarea\n                      color=\"black\"\n                      outlined\n                      background-color=\"white\"\n                      dense\n                      type=\"text\"\n                      v-model=\"curid.description\"\n                      hide-details\n                    >\n                    </v-textarea>\n                  </v-form>\n                </v-flex>\n\n                <v-flex xs10 pt-4>\n                  <span style=\"color: black; font-size: 16px; font-weight: bold\"\n                    >Content</span\n                  >\n\n                  <vue-editor v-model=\"curid.content\"></vue-editor>\n                </v-flex>\n                <v-flex\n                  xs10\n                  pt-6\n                  style=\"color: black; font-size: 16px; font-weight: bold\"\n                >\n                  <v-layout wrap>\n                    <v-flex xs6>\n                      <v-img\n                        v-if=\"curid.topImage\"\n                        :src=\"curid.topImage\"\n                      ></v-img>\n                    </v-flex>\n                    <v-flex xs6 pl-10>\n                      <span>Edit Image</span>\n                      <ImageComp\n                        @stepper=\"winStepper\"\n                        :height=\"'1000'\"\n                        :width=\"'1300'\"\n                        :heading=\"'Upload Image'\"\n                        :componentType=\"'topImage'\"\n                      />\n                    </v-flex>\n                  </v-layout>\n                </v-flex>\n\n                <v-flex xs3 text-right pt-3>\n                  <v-btn\n                    block\n                    class=\"custombackground\"\n                    dark\n                    width=\"100px\"\n                    @click=\"edit()\"\n                  >\n                    <span style=\"color: white; font-size: 14px\"> Edit </span>\n                    <v-icon size=\"15px\" color=\"white\"> mdi-pencil </v-icon>\n                  </v-btn>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n          </v-layout>\n        </v-card>\n      </v-dialog>\n\n      <v-dialog\n        :retain-focus=\"true\"\n        persistent\n        v-model=\"addDialog\"\n        max-width=\"650px\"\n      >\n        <v-card style=\"font-family: LexendRegular\">\n          <v-layout wrap justify-center>\n            <v-flex\n              ><v-layout wrap justify-center pa-3>\n                <v-flex xs12 text-right>\n                  <v-icon\n                    @click=\"addDialog = false\"\n                    color=\"red\"\n                    size=\"150%\"\n                    dark\n                  >\n                    mdi-close\n                  </v-icon>\n                </v-flex>\n                <v-flex xs10>\n                  <span style=\"color: black; font-size: 16px; font-weight: bold\"\n                    >Title\n                  </span>\n                  <v-form @submit.prevent=\"validateInput\">\n                    <v-text-field\n                      color=\"black\"\n                      outlined\n                      background-color=\"white\"\n                      dense\n                      type=\"text\"\n                      v-model=\"name\"\n                      hide-details\n                    >\n                    </v-text-field>\n                  </v-form>\n                </v-flex>\n\n                <v-flex xs10 pt-4>\n                  <span style=\"color: black; font-size: 16px; font-weight: bold\"\n                    >Description</span\n                  >\n                  <v-form @submit.prevent=\"validateInput\">\n                    <v-text-field\n                      color=\"black\"\n                      outlined\n                      background-color=\"white\"\n                      dense\n                      type=\"text\"\n                      v-model=\"description\"\n                      hide-details\n                    >\n                    </v-text-field>\n                  </v-form>\n                </v-flex>\n\n                <v-flex xs10 pt-4>\n                  <span style=\"color: black; font-size: 16px; font-weight: bold\"\n                    >Content</span\n                  >\n                  <vue-editor v-model=\"content\"></vue-editor>\n                </v-flex>\n\n                <v-flex\n                  xs10\n                  pt-6\n                  style=\"color: black; font-size: 16px; font-weight: bold\"\n                >\n                  <span style=\"color: black; font-size: 16px; font-weight: bold\"\n                    >Add Image</span\n                  >\n                  <ImageComp\n                    @stepper=\"winStepper\"\n                    :height=\"'1000'\"\n                    :width=\"'1300'\"\n                    :heading=\"'Upload Image'\"\n                    :componentType=\"'topImage'\"\n                  />\n                </v-flex>\n\n                <v-flex xs3 text-right pt-3>\n                  <v-btn\n                    block\n                    class=\"custombackground\"\n                    dark\n                    width=\"100px\"\n                    @click=\"validateFields()\"\n                  >\n                    <span style=\"color: white; font-size: 14px\"> Add </span>\n                    <v-icon size=\"15px\" color=\"white\">mdi-plus</v-icon>\n                  </v-btn>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n          </v-layout>\n        </v-card>\n      </v-dialog>\n    </v-layout>\n  </div>\n</template>\n  <script>\nimport ImageComp from \"../public/s\";\nimport { VueEditor } from \"vue2-editor\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nexport default {\n  name: \"FirebaseTest\",\n\n  components: {\n    ImageComp,\n    VueEditor,\n  },\n  data() {\n    return {\n      userType: localStorage.getItem(\"userType\"),\n      showSnackBar: false,\n      deletedialog: false,\n      content: \"\",\n      description: \"\",\n      sub: false,\n      ServerError: false,\n      deleteDialog: false,\n      timeout: 5000,\n      prev: null,\n      msg: null,\n      curid: [],\n      dialog: false,\n      editdialog: false,\n      name: \"\",\n      appLoading: false,\n      dialogDelete: false,\n      search: \"\",\n      itemname: \"\",\n      addcat: false,\n      list: [],\n      coverImageFile: null,\n      selectedFiles: [],\n      image: null,\n      role: null,\n      coverImageArray: [],\n      formDataCover: new FormData(),\n      flagg: true,\n      subname: null,\n      menu: false,\n      menu1: false,\n      deleteid: \"\",\n      menu2: false,\n      menu22: false,\n      formData2: new FormData(),\n      empList2: null,\n      toDate: null,\n      fromDate: null,\n      formData: new FormData(),\n      formData3: new FormData(),\n\n      empList3: null,\n      search1: null,\n      search2: null,\n      search3: null,\n      search11: null,\n      id: \"\",\n      search22: null,\n      topImage: null,\n      blogs: [],\n      searchInput: null,\n      search33: null,\n      keysearch: null,\n      ffprojectList: null,\n      addDialog: false,\n    };\n  },\n\n  mounted() {\n    if (this.userType === \"admin\") {\n      this.getAllBlogs();\n    } else if (this.userType === \"user\") {\n      this.getBlogs();\n    }\n    // Fetch locations data when the component mounts\n  },\n\n  methods: {\n    getAllBlogs() {\n      console.log(\"Fetching all blogs...\");\n      this.appLoading = true;\n\n      // Get a reference to the Firestore database\n      const db = firebase.firestore();\n\n      // Fetch all blogs\n      db.collection(\"blogs\")\n        .get()\n        .then(async (querySnapshot) => {\n          // Iterate through the documents and fetch user data for each blog\n          const promises = querySnapshot.docs.map(async (doc) => {\n            const blogData = doc.data();\n            const userId = blogData.userId;\n\n            // Fetch user data for the current blog\n            const userDoc = await db.collection(\"users\").doc(userId).get();\n            const userData = userDoc.data();\n\n            // Populate the user property of the blog with user data\n            blogData.user = userData;\n\n            return blogData;\n          });\n\n          // Resolve all promises\n          const blogs = await Promise.all(promises);\n\n          // Update the blogs array with the fetched data\n          this.blogs = blogs;\n          this.appLoading = false;\n        })\n        .catch((error) => {\n          // Handle any errors that occur during the Firestore operation\n          console.error(\"Error fetching all blogs:\", error);\n          // Optionally, provide feedback to the user about the error\n          this.appLoading = false;\n        });\n    },\n\n    deleteBlog(index) {\n      // Remove the blog at the specified index from the list\n      this.list.splice(index, 1);\n\n      // Update the blogs data in Local Storage\n      localStorage.setItem(\"blogs\", JSON.stringify(this.list));\n      this.deleteDialog = false;\n      this.msg = \"Blog deleted successfully\";\n      this.showSnackBar = true;\n      this.editdialog = false;\n      this.getBlogs();\n    },\n    navigateToBlogDetails(item, useremail) {\n      const itemToSend = {\n        name: item.name,\n        description: item.description,\n        createdAt: item.createdAt,\n        content: item.content,\n        phoneNumber: item.user ? item.user.phoneNumber : null,\n        topImage: item.topImage,\n      };\n\n      this.$router.push({\n        name: \"BlogDetails\",\n        query: {\n          item: JSON.stringify(itemToSend),\n          useremail: useremail,\n        },\n      });\n    },\n\n    getBlogs() {\n      this.appLoading = true;\n      // Get the current user\n      const currentUser = firebase.auth().currentUser;\n\n      if (!currentUser) {\n        // User is not authenticated, handle this case if needed\n        console.error(\"User is not authenticated.\");\n        return;\n      }\n\n      // Get a reference to the Firestore database\n      const db = firebase.firestore();\n\n      // Query the \"blogs\" collection to fetch blogs associated with the current user\n      db.collection(\"blogs\")\n        .where(\"userId\", \"==\", currentUser.uid)\n        .get()\n        .then((querySnapshot) => {\n          const storedLocations = [];\n          querySnapshot.forEach((doc) => {\n            // For each document in the collection, push it to the storedLocations array\n            storedLocations.push({ id: doc.id, ...doc.data() });\n          });\n          // Set the list data to the fetched locations\n          this.list = storedLocations;\n          this.appLoading = false;\n        })\n        .catch((error) => {\n          // Handle any errors that occur during the Firestore operation\n          console.error(\"Error fetching locations: \", error);\n          // Optionally, provide feedback to the user about the error\n        });\n    },\n\n    validateFields() {\n      if (!this.name) {\n        this.msg = \"Please enter Blog title\";\n        this.showSnackBar = true;\n        return;\n      } else if (!this.description) {\n        this.msg = \"Please enter Blog description\";\n        this.showSnackBar = true;\n        return;\n      } else if (!this.content) {\n        this.msg = \"Please enter Blog content\";\n        this.showSnackBar = true;\n        return;\n      } else if (!this.topImage) {\n        this.msg = \"Please enter Blog image\";\n        this.showSnackBar = true;\n        return;\n      } else {\n        this.add();\n      }\n    },\n\n    add() {\n      const reader = new FileReader();\n      reader.readAsDataURL(this.topImage);\n      reader.onload = () => {\n        // Get the current user\n        const currentUser = firebase.auth().currentUser;\n\n        if (!currentUser) {\n          // User is not authenticated, handle this case if needed\n          console.error(\"User is not authenticated.\");\n          return;\n        }\n\n        // Get the current date and time\n        const currentDate = new Date();\n        const dateTimeString = currentDate.toISOString(); // Convert to ISO string format\n\n        let newBlog = {\n          name: this.name,\n          description: this.description,\n          content: this.content,\n          topImage: reader.result,\n          userId: currentUser.uid, // Store the user's UID along with the blog data\n          createdAt: dateTimeString, // Store the current date and time\n        };\n\n        // Get a reference to the Firestore database\n        const db = firebase.firestore();\n\n        // Add the new blog to the \"blogs\" collection in Firestore\n        db.collection(\"blogs\")\n          .add(newBlog)\n          .then(() => {\n            this.msg = \"Blog added successfully\";\n            this.showSnackBar = true;\n            // Reset the form fields\n            this.name = \"\";\n            this.description = \"\";\n            this.content = \"\";\n            this.topImage = null;\n            this.addDialog = false;\n            this.getBlogs();\n          })\n          .catch((error) => {\n            // Handle any errors that occur during the Firestore operation\n            console.error(\"Error adding blog: \", error);\n            // Provide feedback to the user about the error\n            this.$emit(\n              \"snackbar\",\n              \"Error adding blog. Please try again later.\"\n            );\n          });\n      };\n    },\n\n    edit() {\n      // Get a reference to the Firestore database\n      const db = firebase.firestore();\n\n      // Find the document to edit based on its ID\n      db.collection(\"blogs\")\n        .doc(this.curid.id)\n        .get()\n        .then((doc) => {\n          if (doc.exists) {\n            // Check if a new image has been selected\n            if (this.topImage instanceof File) {\n              // Convert the new image to Base64 format\n              const reader = new FileReader();\n              reader.readAsDataURL(this.topImage);\n              reader.onload = () => {\n                // Update the blog document in Firestore with the edited values\n                db.collection(\"blogs\")\n                  .doc(this.curid.id)\n                  .update({\n                    name: this.curid.name,\n                    description: this.curid.description,\n                    content: this.curid.content,\n                    topImage: reader.result, // Assign the Base64 image data\n                  })\n                  .then(() => {\n                    // Provide feedback to the user that the blog was edited successfully\n                    this.msg = \"Blog edited successfully\";\n                    this.showSnackBar = true;\n                    this.editdialog = false;\n                    this.getBlogs();\n                  })\n                  .catch((error) => {\n                    // Handle any errors that occur during the Firestore operation\n                    console.error(\"Error editing blog:\", error);\n                    // Optionally, provide feedback to the user about the error\n                  });\n              };\n            } else {\n              // Update the blog document in Firestore with the edited values\n              db.collection(\"blogs\")\n                .doc(this.curid.id)\n                .update({\n                  name: this.curid.name,\n                  description: this.curid.description,\n                  content: this.curid.content,\n                  // Keep the existing image if no new image is selected\n                })\n                .then(() => {\n                  // Provide feedback to the user that the blog was edited successfully\n                  this.msg = \"Blog edited successfully\";\n                  this.showSnackBar = true;\n                  this.editdialog = false;\n                  this.getBlogs();\n                })\n                .catch((error) => {\n                  // Handle any errors that occur during the Firestore operation\n                  console.error(\"Error editing blog:\", error);\n                  // Optionally, provide feedback to the user about the error\n                });\n            }\n          } else {\n            // Blog not found, provide feedback to the user\n            this.$emit(\"snackbar\", \"Blog not found\");\n          }\n        })\n        .catch((error) => {\n          // Handle any errors that occur during the Firestore operation\n          console.error(\"Error retrieving blog for editing:\", error);\n          // Optionally, provide feedback to the user about the error\n        });\n\n      // Close the edit dialog\n      this.editdialog = false;\n    },\n\n    formatTime(timestamp) {\n      const date = new Date(timestamp);\n      // Format the date and time as per your requirement\n      const formattedDateTime = date.toLocaleString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n      });\n      return formattedDateTime;\n    },\n    formatDate(timestamp) {\n      const date = new Date(timestamp);\n      // Format the date and time as per your requirement\n      const formattedDateTime = date.toLocaleString(\"en-US\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n      return formattedDateTime;\n    },\n    handleEditClick(item) {\n      this.curid = item;\n      console.log(\"data is\", this.curid);\n      this.topImage = this.curid.topImage;\n      console.log(\"photo\", this.topImage);\n      this.editdialog = true;\n    },\n\n    winStepper(window_data) {\n      if (window_data.type == \"topImage\") {\n        this.topImage = window_data.selectedFiles;\n      } else if (window_data.type == \"image\") {\n        this.imageArray = window_data.imageArray;\n        this.imageFiles.push(window_data.selectedFiles);\n      } else if (window_data.type == \"imageRemoval\") {\n        var values = this.formData.getAll(\"photos\");\n        values.splice(window_data.removalItem, 1);\n        this.formData.set(\"photos\", values);\n        this.imageArray = window_data.imageArray;\n      }\n    },\n  },\n};\n</script>\n  <style >\n.buttongrad {\n  background: linear-gradient(to right, black, black);\n}\n\n.justified-text {\n  text-align: justify;\n}\n\n.cus {\n  background-color: #13736f;\n}\n\n.no-uppercase {\n  text-transform: none !important;\n}\n\n.cus2 {\n  background: var(\n    --grend,\n    linear-gradient(\n      252deg,\n      #e4ecee 0%,\n      #9bc2c2 0%,\n      #6ca6a5 28%,\n      #157470 88%,\n      #13736f 100%\n    )\n  );\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}